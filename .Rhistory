xlab('Time')
ggplot(may_16.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.6,.1)) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
xlab('Time')
# Number of pickups over time colored by day
ggplot(uber,
aes(x = date)) +
geom_histogram(binwidth = 1,
aes(fill = day)) +
scale_x_continuous(breaks = seq(7, 28, 7)) +
scale_y_continuous(labels = comma) +
scale_fill_brewer(type = 'seq', palette = 1) +
ggtitle('Monthly Pickups Colored by Day') +
labs(fill = 'Day') +
xlab('Date') +
ylab('Number of Pickups') +
facet_wrap(~ month) +
ggsave('graphs/monthly_pickups_histogram.png',
width = 12,
height = 8,
units = 'in')
may_24.by_hour <- uber_may %>%
filter(date == 24) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
ggplot(may_24.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.6,.1)) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
ggplot(june_27.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('red'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.8,.1)) +
ggtitle('Saturday, June 27 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
xlab('Time')
ggplot(may_24.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
ggplot(june_27.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('red'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.8,.1)) +
ggtitle('Saturday, June 27 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
xlab('Time')
may_24.by_hour <- uber_may %>%
filter(date == 24) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
may_24.by_hour <- uber_may %>%
filter(date == 24) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup()
View(may_24.by_hour)
View(saturday_ave)
View(may_24.by_hour)
may_23.by_hour <- uber_may %>%
filter(date == 23) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
remove(may_24.by_hour)
may_23.by_hour <- uber_may %>%
filter(date == 23) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
ggplot(june_27.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('red'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.8,.1)) +
ggtitle('Saturday, June 27 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
xlab('Time')
ggplot(may_16.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.6,.1)) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
xlab('Time')
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple')))
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1)
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1))
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent)
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent) +
ggtitle('Saturday, May 23 Pickups') +
ylab('Pickups (% Above Ave Saturday)') +
xlab('Time')
ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent) +
ggtitle('Saturday, May 23 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
p1 <- ggplot(may_16.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.6,.1)) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
p2 <- ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent) +
ggtitle('Saturday, May 23 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
p3 <- ggplot(june_27.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('red'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
breaks = seq(1,1.8,.1)) +
ggtitle('Saturday, June 27 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(may_16.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
limits = c(.7,1.8),
breaks = seq(.7,1.8,.1)) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
grid.arrange(p1, p2, p3, ncol = 1)
p1 <- ggplot(may_16.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('blue'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
limits = c(.6,1.8),
breaks = seq(.6,1.8,.2)) +
ggtitle('Saturday, May 16 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
p2 <- ggplot(may_23.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('purple'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
limits = c(.6,1.8),
breaks = seq(.6,1.8,.2)) +
ggtitle('Saturday, May 23 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
p3 <- ggplot(june_27.by_hour,
aes(x = hour,
y = rides / ave_rides)) +
geom_line(aes(color = I('red'))) +
geom_hline(linetype = 2, alpha = .3, yintercept = 1) +
scale_x_continuous(breaks = seq(0,24,1)) +
scale_y_continuous(labels = scales::percent,
limits = c(.6,1.8),
breaks = seq(.6,1.8,.2)) +
ggtitle('Saturday, June 27 Pickups') +
ylab('Pickups (% Versus Ave Saturday)') +
xlab('Time')
grid.arrange(p1, p2, p3, ncol = 1)
# Number of pickups over time colored by day
ggplot(uber,
aes(x = date)) +
geom_histogram(binwidth = 1,
aes(fill = day)) +
scale_x_continuous(breaks = seq(7, 28, 7)) +
scale_y_continuous(labels = comma) +
scale_fill_brewer(type = 'seq', palette = 1) +
ggtitle('Monthly Pickups Colored by Day') +
labs(fill = 'Day') +
xlab('Date') +
ylab('Number of Pickups') +
facet_wrap(~ month) +
ggsave('graphs/monthly_pickups_histogram.png',
width = 12,
height = 8,
units = 'in')
grid.arrange(p1, p2, p3, ncol = 1) +
ggsave('graphs/monthly_pickups_histogram.png',
width = 12,
height = 8,
units = 'in')
g <- arrangeGrob(p1, p2, p3, ncol = 1) #generates g
ggsave(file="may16_may23_jun27_percent_change.png",
g,
width = 12,
height = 8,
units = 'in')
ggsave(file="graphs/may16_may23_jun27_percent_change.png",
g,
width = 12,
height = 8,
units = 'in')
# Map Scatterplot of New York Pickups
lon_left <- min(taxi_lookup$lon)
lon_right <- max(taxi_lookup$lon)
lat_bottom <- min(taxi_lookup$lat)
lat_top <- max(taxi_lookup$lat)
nyc <- get_map(location = c(lon_left,
lat_bottom,
lon_right,
lat_top),
source = 'stamen')
nycMap <- ggmap(nyc,
extent = "panel")
nycMap +
geom_point(aes(x = lon,
y = lat,
size = rides,
color = rides,
alpha = .01),
#alpha = .01,
data = uber_known.by_loc) +
scale_color_gradient2(low = 'yellow',
high = 'red',
mid = 'yellow',
labels = comma,
guide = guide_colorbar(barheight = 20,
title = 'Pickups')) +
ggtitle('Uber Pickups Scatterplot Map') +
scale_size(guide = 'none') +
guides(alpha = F) +
ggsave('graphs/scatterplot_map.png')
subset(taxi_lookup, lat > 41)
taxi_lookup[3, 17]
taxi_lookup[17, 3]
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
?read.csv
taxi_lookup <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
# Read csv's and load taxi lookup data
setwd('/Users/courtneyfergusonlee/p4')
uber <- read.csv('uber-raw-data-janjune-15.csv')
taxi_lookup <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
# Changes Bedford to Bedford-Stuyvesant
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
# Get latitude and longitude info for location data (Long Process)
citystate = 'new york city new york'
taxi_lookup <- mutate(taxi_lookup,
lat = geocode(paste(Zone, citystate, sep = ', '), output = 'latlon')$lat,
lon = geocode(paste(Zone, citystate, sep = ', '), output = 'latlon')$lon)
# Check for missing latitude or longitude data
taxi_lookup.lat_na <- subset(taxi_lookup, is.na(lat))
taxi_lookup.lon_na <- subset(taxi_lookup, is.na(lon))
taxi_lookup.lat_na
taxi_lookup.lon_na
subset(taxi_lookup, lat > 41)
# If there's missing data, need to rename variables and replace values as nec.
names(taxi_lookup.lat_na) <- c("LocationID",
"Borough",
"Zone",
"latitude",
"longitude")
names(taxi_lookup.lon_na) <- c("LocationID",
"Borough",
"Zone",
"latitude",
"longitude")
# Lookup missing values in bulk, check for warnings
taxi_lookup.lat_na <- mutate(taxi_lookup.lat_na,
latitude = geocode(paste(Zone, citystate, sep = ', '),
output = 'latlon')$lat)
taxi_lookup.lon_na <- mutate(taxi_lookup.lon_na,
longitude = geocode(paste(Zone, citystate, sep = ', '),
output = 'latlon')$lon)
# Replace missing values CAREFULLY (Lookup is a long process)
taxi_lookup[taxi_lookup.lat_na$LocationID, 4] <- taxi_lookup.lat_na$latitude
taxi_lookup[taxi_lookup.lon_na$LocationID, 5] <- taxi_lookup.lon_na$longitude
# Map Scatterplot of New York Pickups
lon_left <- min(taxi_lookup$lon)
lon_right <- max(taxi_lookup$lon)
lat_bottom <- min(taxi_lookup$lat)
lat_top <- max(taxi_lookup$lat)
nyc <- get_map(location = c(lon_left,
lat_bottom,
lon_right,
lat_top),
source = 'stamen')
nycMap <- ggmap(nyc,
extent = "panel")
nycMap +
geom_point(aes(x = lon,
y = lat,
size = rides,
color = rides,
alpha = .01),
#alpha = .01,
data = uber_known.by_loc) +
scale_color_gradient2(low = 'yellow',
high = 'red',
mid = 'yellow',
labels = comma,
guide = guide_colorbar(barheight = 20,
title = 'Pickups')) +
ggtitle('Uber Pickups Scatterplot Map') +
scale_size(guide = 'none') +
guides(alpha = F) +
ggsave('graphs/scatterplot_map.png')
subset(taxi_lookup_lat > 40.9)
subset(taxi_lookup$lat > 40.9)
subset(taxi_lookup,lat > 40.9)
subset(taxi_lookup, lat > 40.8 & lon < -74.1)
| Zone == 'Bloomfield/Emerson Hill') %>%
select(LocationID, Borough, Zone) %>%
print
View(taxi_lookup)
| Zone == 'Bloomfield/Emerson Hill') %>%
dplyr::select(LocationID, Borough, Zone) %>%
print
View(taxi_lookup)
taxi_probs <- taxi_lookup %>%
filter(Zone == 'Bedford'
| Zone == 'Eastchester'
| Zone == 'Bloomfield/Emerson Hill') %>%
dplyr::select(LocationID, Borough, Zone) %>%
print
taxi_copy <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
taxi_probs <- taxi_copy %>%
filter(Zone == 'Bedford'
| Zone == 'Eastchester'
| Zone == 'Bloomfield/Emerson Hill') %>%
dplyr::select(LocationID, Borough, Zone) %>%
print
taxi_probs <- mutate(taxi_probs,
lat = geocode(paste(Zone, Borough, sep = ', '), output = 'latlon')$lat,
lon = geocode(paste(Zone, Borough, sep = ', '), output = 'latlon')$lon)
View(taxi_probs)
taxi_lookup[24, 3]
taxi_lookup[23, 3]
help(package ='ggmap')
geocodeQueryCheck()
taxi_lookup <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
taxi_lookup[23, 3] <- 'Bloomfield'
taxi_lookup <- mutate(taxi_lookup,
lat = geocode(paste(Zone, Borough, sep = ', '), output = 'latlon')$lat,
lon = geocode(paste(Zone, Borough, sep = ', '), output = 'latlon')$lon)
taxi_lookup.lat_na <- subset(taxi_lookup, is.na(lat))
taxi_lookup.lon_na <- subset(taxi_lookup, is.na(lon))
taxi_lookup.lat_na
taxi_lookup.lon_na
uber <- uber %>%
inner_join(taxi_lookup,
by = c('locationID' = 'LocationID')) %>%
mutate(hour = hour(Pickup_date),
day = wday(Pickup_date, label = T, abbr = F),
month = month(Pickup_date, label = T, abbr = F),
date = day(Pickup_date))
# Read csv's and load taxi lookup data
setwd('/Users/courtneyfergusonlee/p4')
uber <- read.csv('uber-raw-data-janjune-15.csv')
taxi_lookup <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
# Changes Bedford (Upstate New York) to Bedford-Stuyvesant (Brooklyn)
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
taxi_lookup[23, 3] <- 'Bloomfield'
# Get latitude and longitude info for location data (Long Process)
#citystate = 'new york city new york'
taxi_lookup <- mutate(taxi_lookup,
lat = geocode(paste(Zone, Borough, sep = ', '), output = 'latlon')$lat,
lon = geocode(paste(Zone, Borough, sep = ', '), output = 'latlon')$lon)
# Map Scatterplot of New York Pickups
lon_left <- min(taxi_lookup$lon)
lon_right <- max(taxi_lookup$lon)
lat_bottom <- min(taxi_lookup$lat)
lat_top <- max(taxi_lookup$lat)
subset(taxi_lookup,lat > 40.9)
subset(taxi_lookup, lat > 40.8 & lon < -74.1)
nyc <- get_map(location = c(lon_left,
lat_bottom,
lon_right,
lat_top),
source = 'stamen')
nycMap <- ggmap(nyc,
extent = "panel")
nycMap +
geom_point(aes(x = lon,
y = lat,
size = rides,
color = rides,
alpha = .01),
#alpha = .01,
data = uber_known.by_loc) +
scale_color_gradient2(low = 'yellow',
high = 'red',
mid = 'yellow',
labels = comma,
guide = guide_colorbar(barheight = 20,
title = 'Pickups')) +
ggtitle('Uber Pickups Scatterplot Map') +
scale_size(guide = 'none') +
guides(alpha = F) +
ggsave('graphs/scatterplot_map.png')
lon_left <- min(taxi_lookup$lon)
lon_right <- max(taxi_lookup$lon)
lat_bottom <- min(taxi_lookup$lat)
lat_top <- max(taxi_lookup$lat)
taxi_lookup <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
taxi_lookup[23, 3] <- 'Bloomfield'
uber <- read.csv('uber-raw-data-janjune-15.csv')
taxi_lookup <- read.csv('taxi-zone-lookup.csv', stringsAsFactors = F)
# Changes Bedford (Upstate New York) to Bedford-Stuyvesant (Brooklyn)
taxi_lookup[17, 3] <- 'Bedford-Stuyvesant'
taxi_lookup[23, 3] <- 'Bloomfield'
taxi_lookup[81, 3] <- 'Eastchester, Bronx'
# Get latitude and longitude info for location data (Long Process)
citystate = 'new york city new york'
taxi_lookup <- mutate(taxi_lookup,
lat = geocode(paste(Zone, citystate, sep = ', '), output = 'latlon')$lat,
lon = geocode(paste(Zone, citystate, sep = ', '), output = 'latlon')$lon)
geocodeQueryCheck()
?geocodeQueryCheck
View(uber)
