adjust = 3) +
scale_x_continuous(breaks = seq(0, 20, 4)) +
scale_color_brewer(type = 'seq',
palette = 1) +
theme_dark() +
ggtitle('Monday - Friday Pickups by Borough') +
xlab('Time') +
ylab('Density') +
ggsave('graphs/monday_pickups_by_borough.png',
width = 10,
height = 6,
units = 'in')
ggplot(subset(uber_known,
day == 'Monday'
| day == 'Tuesday'
| day == 'Wednesday'
| day == 'Thursday'
| day == 'Friday'),
aes(x = hour)) +
geom_density(aes(color = Borough),
adjust = 3) +
scale_x_continuous(breaks = seq(0, 20, 4)) +
scale_color_brewer(type = 'seq',
palette = 1) +
theme_dark() +
ggtitle('Monday - Friday Pickups by Borough') +
xlab('Time') +
ylab('Density') +
ggsave('graphs/monday_pickups_by_borough.png',
width = 10,
height = 6,
units = 'in')
ggplot(subset(uber_known, day == 'Saturday'),
aes(x = hour)) +
geom_density(aes(color = Borough),
adjust = 2) +
scale_x_continuous(breaks = seq(0, 20, 4)) +
scale_color_brewer(type = 'seq',
palette = 8) +
theme_dark() +
ggtitle('Saturday Pickups by Borough') +
xlab('Time') +
ylab('Density') +
ggsave('graphs/monday_pickups_by_borough.png',
width = 10,
height = 6,
units = 'in')
ggplot(subset(uber_known, day =='Sunday'),
aes(x = hour)) +
geom_density(aes(color = Borough),
adjust = 2) +
scale_x_continuous(breaks = seq(0, 20, 4)) +
scale_color_brewer(type = 'seq',
palette = 2) +
theme_dark() +
ggtitle('Sunday Pickups by Borough') +
xlab('Time') +
ylab('Density') +
ggsave('graphs/monday_pickups_by_borough.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber,
aes(x = hour)) +
geom_freqpoly(binwidth = 1,
color = I('Blue')) +
scale_x_continuous(limits = c(0, 23),
breaks = 0:23) +
ggtitle('Pickups per Hour') +
xlab('Time') +
ylab('Number of Pickups') +
ggsave('graphs/hourly_pickups_freqpoly.png')
table(uber$hour)
# Table of pickups by day
table(uber$day)
table(uber$month)
summary(uber$Borough)
table(uber_known$Borough)
summary(uber$hour)
source('~/.active-rstudio-document', echo=TRUE)
setwd('/Users/courtneyfergusonlee/p4')
uber <- read.csv('data/uber-raw-data-janjune-15.csv')
taxi_lookup <- read.csv('data/taxi-zone-lookup.csv', stringsAsFactors = F)
load('data/uber.RData', .GlobalEnv)
set.seed(420)
uber_sample <- uber[sample(1:length(uber$locationID), 100000), ]
uber_sample <- uber_sample %>%
inner_join(taxi_lookup,
by = c('locationID' = 'LocationID')) %>%
mutate(Pickup_date = ymd_hms(Pickup_date),
hour = hour(Pickup_date),
day = wday(Pickup_date, label = T, abbr = F),
day = ordered(day, levels = c('Monday',
'Tuesday',
'Wednesday',
'Thursday',
'Friday',
'Saturday',
'Sunday')),
month = month(Pickup_date, label = T, abbr = F),
date = day(Pickup_date),
Borough = as.factor(Borough),
Zone = as.factor(Zone),
locationID = as.factor(locationID)) %>%
droplevels()
str(uber_sample$day)
uber_sample_known <- uber_sample %>%
filter(Borough != 'Unknown' & Borough != 'EWR') # EWR is NJ
# Create Zone, Borough, lat, lon, hour, day, month and date variables
uber <- uber %>%
inner_join(taxi_lookup,
by = c('locationID' = 'LocationID')) %>%
mutate(Pickup_date = ymd_hms(Pickup_date),
hour = hour(Pickup_date),
day = wday(Pickup_date, label = T, abbr = F),
day = ordered(day, levels = c('Monday',
'Tuesday',
'Wednesday',
'Thursday',
'Friday',
'Saturday',
'Sunday')),
month = month(Pickup_date, label = T, abbr = F),
date = day(Pickup_date),
Borough = as.factor(Borough),
Zone = as.factor(Zone),
locationID = as.factor(locationID)) %>%
droplevels()
# Filter known boroughs for location analyses
uber_known <- uber %>%
filter(Borough != 'Unknown' & Borough != 'EWR') %>% # EWR is NJ
droplevels()
# Create month tables for quicker execution
uber_jan <- uber %>%
filter(month == 'January')
uber_feb <- uber %>%
filter(month == 'February')
uber_mar <- uber %>%
filter(month == 'March')
uber_apr <- uber %>%
filter(month == 'April')
uber_may <- uber %>%
filter(month == 'May')
uber_jun <- uber %>%
filter(month == 'June')
# Create Saturday tables to make comparisons
saturday_rides <- uber%>%
filter(day == 'Saturday') %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup()
saturday_ave <- saturday_rides %>%
group_by(day, hour) %>%
summarise(ave_rides = mean(rides))
# Create individual date tables for comparisons
may_16.by_hour <- uber_may %>%
filter(date == 16) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
may_23.by_hour <- uber_may %>%
filter(date == 23) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
june_27.by_hour <- uber_jun %>%
filter(date == 27) %>%
group_by(month, date, day, hour) %>%
summarise(rides = n()) %>%
ungroup() %>%
inner_join(saturday_ave)
# Bin by quarter hour, half hour, hour and day, turning rides into a variable
uber.by_quarter_hour <- uber %>%
mutate(minute = minute(Pickup_date),
quarter_hour = floor(minute/15) * 15,
hour_plus_quarter = hour + quarter_hour/60) %>%
group_by(month,
date,
day,
hour,
hour_plus_quarter) %>%
summarise(rides = n()) %>%
ungroup()
uber.by_half_hour <- uber %>%
mutate(minute = minute(Pickup_date),
half_hour = floor(minute/30) * 30,
hour_plus_half = hour + half_hour/60) %>%
group_by(month,
date,
day,
hour,
hour_plus_half) %>%
summarise(rides = n()) %>%
ungroup()
uber.by_hour <- uber %>%
group_by(month,
date,
day,
hour) %>%
summarise(rides = n()) %>%
ungroup()
uber.by_day <- uber %>%
group_by(month,
date,
day) %>%
summarise(rides = n()) %>%
ungroup()
# Bin by location for map scatter plot and location boxplot
uber_known.by_loc <- uber_known %>%
group_by(Zone) %>%
summarise(rides = n()) %>%
inner_join(taxi_lookup) %>%
ungroup()
# Bin by hour and location
uber_known.by_hour_borough <- uber_known %>%
group_by(month,
date,
day,
hour,
Borough) %>%
summarise(rides = n()) %>%
ungroup()
View(uber_known.by_loc)
View(uber_known.by_hour_borough)
View(uber_known.by_hour_borough)
View(uber_known.by_loc)
str(uber_sample)
str(uber)
summary(uber.by_hour)
summary(uber.by_hour$rides)
ggplot(uber,
aes(x = hour)) +
geom_freqpoly(binwidth = 1,
color = I('Blue')) +
scale_x_continuous(limits = c(0, 23),
breaks = 0:23) +
ggtitle('Pickups per Hour') +
xlab('Time') +
ylab('Number of Pickups') +
ggsave('graphs/hourly_pickups_freqpoly.png')
ggplot(uber,
aes(x = hour)) +
geom_histogram(binwidth = 1,
aes(color = day)) +
scale_x_continuous(breaks = seq(0,18,6)) +
scale_color_brewer(type = 'qual', palette = 1) +
ggtitle('Hourly Pickups by Day') +
guides(color = F) +
xlab('Time') +
ylab('Number of Pickups') +
facet_wrap(~ day) +
ggsave('graphs/hourly_pickups_by_day_histogram.png',
width = 12,
height = 8,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram()
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram(binwidth = 200) +
ggtitle('Pickups per Hour Histogram') +
xlab('Pickups') +
ylab('Frequency')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram() +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups') +
ylab('Frequency')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram() +
scale_x_continuous(labels = comma) +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups') +
ylab('Frequency')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram(binwidth = 200) +
scale_x_continuous(limits = c(0, 200000),
breaks = seq(0, 200000, 25000)) +
ggtitle('Pickups per Hour Histogram') +
xlab('Pickups per Hour') +
ylab('Frequency')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram(binwidth = 200) +
ggtitle('Pickups per Hour Histogram') +
xlab('Pickups per Hour') +
ylab('Frequency')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram() +
scale_x_continuous(labels = comma,
limits = c(0, 200000),
breaks = seq(0, 200000, 25000)) +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups per Day') +
ylab('Frequency')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram() +
scale_x_continuous(labels = comma,
limits = c(0, 150000),
breaks = seq(0, 150000, 25000)) +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups per Day') +
ylab('Frequency')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram(binwidth = 5000) +
scale_x_continuous(labels = comma,
limits = c(0, 150000),
breaks = seq(0, 150000, 25000)) +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups per Day') +
ylab('Frequency')
ggplot(uber,
aes(x = day)) +
geom_bar(aes(fill = day)) +
scale_fill_brewer(type = 'seq',
palette = 2) +
ggtitle('Total Pickups by Day') +
ylab('Number of Pickups') +
xlab('Day') +
guides(fill = 'none') +
ggsave('graphs/day_barchart.png')
ggplot(uber,
aes(x = hour)) +
geom_freqpoly(binwidth = 1,
color = I('Blue')) +
scale_x_continuous(limits = c(0, 23),
breaks = 0:23) +
ggtitle('Total Pickups by Hour') +
xlab('Time') +
ylab('Number of Pickups') +
ggsave('graphs/hourly_pickups_freqpoly.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram(binwidth = 200) +
ggtitle('Pickups per Hour Histogram') +
xlab('Pickups per Hour') +
ylab('Frequency') +
ggsave('graphs/pickups_per_hour_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram(binwidth = 200) +
ggtitle('Pickups per Hour Histogram') +
scale_x_log10() +
xlab('Pickups per Hour') +
ylab('Frequency') +
ggsave('graphs/pickups_per_hour_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram() +
ggtitle('Pickups per Hour Histogram') +
scale_x_log10() +
xlab('Pickups per Hour') +
ylab('Frequency') +
ggsave('graphs/pickups_per_hour_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram(binwidth = 200) +
ggtitle('Pickups per Hour Histogram') +
xlab('Pickups per Hour') +
ylab('Frequency') +
ggsave('graphs/pickups_per_hour_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram() +
ggtitle('Pickups per Hour Histogram') +
scale_x_log10() +
xlab('Pickups per Hour \n (log scale)') +
ylab('Frequency') +
ggsave('graphs/pickups_per_hour_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_hour,
aes(x = rides)) +
geom_histogram() +
ggtitle('Pickups per Hour Histogram (log scale x-axis)') +
scale_x_log10() +
xlab('Pickups per Hour \n (log scale)') +
ylab('Frequency') +
ggsave('graphs/pickups_per_hour_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber,
aes(x = day)) +
geom_bar(aes(fill = day)) +
scale_fill_brewer(type = 'seq',
palette = 2) +
ggtitle('Total Pickups by Day') +
ylab('Number of Pickups') +
xlab('Day') +
guides(fill = 'none') +
ggsave('graphs/day_barchart.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram(binwidth = 5000) +
scale_x_continuous(labels = comma,
limits = c(0, 150000),
breaks = seq(0, 150000, 25000)) +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups per Day') +
ylab('Frequency') +
ggsave('pickups_per_day_histogram.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber,
aes(x = month)) +
geom_bar(aes(fill = month)) +
scale_fill_brewer(type = 'seq',
palette = 1,
direction = 1) +
scale_y_continuous(labels = comma) +
ggtitle('Pickups per Month') +
guides(fill = 'none') +
ylab('Number of Pickups') +
xlab('Month') +
ggsave('graphs/pickups_per_month_barplot.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber,
aes(x = month)) +
geom_bar(aes(fill = month)) +
scale_fill_brewer(type = 'seq',
palette = 1,
direction = 1) +
scale_y_continuous(labels = comma) +
ggtitle('Total Pickups per Month') +
guides(fill = 'none') +
ylab('Number of Pickups') +
xlab('Month') +
ggsave('graphs/pickups_per_month_barplot.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber,
aes(x = month)) +
geom_bar(aes(fill = month)) +
scale_fill_brewer(type = 'seq',
palette = 1,
direction = 1) +
scale_y_continuous(labels = comma) +
ggtitle('Total Pickups per Month') +
guides(fill = 'none') +
ylab('Number of Pickups') +
xlab('Month') +
ggsave('graphs/pickups_per_month_barplot.png',
width = 10,
height = 6,
units = 'in')
ggplot(uber,
aes(x = month)) +
geom_bar(aes(fill = month)) +
scale_fill_brewer(type = 'seq',
palette = 1,
direction = 1) +
scale_y_continuous(labels = comma) +
ggtitle('Total Pickups per Month') +
guides(fill = 'none') +
ylab('Number of Pickups') +
xlab('Month')
ggplot(uber.by_day,
aes(x = rides)) +
geom_histogram(binwidth = 5000) +
scale_x_continuous(labels = comma,
limits = c(0, 150000),
breaks = seq(0, 150000, 25000)) +
ggtitle('Pickups per Day Histogram') +
xlab('Pickups per Day') +
ylab('Frequency')
ggplot(uber,
aes(x = day)) +
geom_bar(aes(fill = day)) +
scale_fill_brewer(type = 'seq',
palette = 2) +
ggtitle('Total Pickups by Day') +
ylab('Number of Pickups') +
xlab('Day') +
guides(fill = 'none') +
ggsave('graphs/day_barchart.png',
width = 10,
height = 6,
units = 'in')
View(saturday_rides)
